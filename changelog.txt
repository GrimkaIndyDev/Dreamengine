---- 0.26.4 ----
 Sample for z-projection test (todo fix it) + minor features
  * add Vector2.getAnglesDifference
  * add Render Events methods
  * add Render._drawRatio attribute and trigger an event when it change
  * fix GameObject.moveTo in case of undefined values
  * fix SpriteRenderer.changeSprite offsets x-y wasn't correctly set
  * other minor clean
  
---- 0.26.3 ----
  * add Timer plugin
  * add version in CONFIG and ImageManager to force cache reload
  * fix loader
  
---- 0.26.2 ----
 Fix during Ludum Dare #35
  * add keyboard Inputs keyCodes
  * add pingPongMode on SpriteRenderer
  * add inverseAutomatism
  * add active/unactive trigger event on GameObject when change enable flag
  
---- 0.26.1 ----
 - others
  * add tests in the main stress_test.html file
  * minor comments/changes
  * clean folders
  
---- 0.26.0 ----
 - features
  * add a CircleRenderer
  * add a RectRenderer

 - fix
  * camera.on("onLastMouseEvent") become camera.on("lastMouseEvent")
  * add missing npm in package
  * LangSystem not failing if nothing in dictionary
  * load event if no images is set in the main pool

 - others
  * create a migration process file
  * add samples (missing plate-former)
  * create more test scenes (better to tests all features quickly)

---- 0.25.0 ----
* add rightClick / middleClick inside mouse events
* change default DEBUG vector color
* add Vector2.wtfAngle (was previous getAngle, don't know why did this, maybe tired to much)
* add Vector2.getVectorAngle return the absolute angle from a Vector2 (usefulle when object is not rotate)
* Plugin TouchControl
* Sample Platformer with all collisions / physics inside (use it for your platform-games!)
* map editor with the platformer sample

-- Fix
* Vector2.getAngle was giving wtf angle
* fix Vector2.normalize, if Vector2 was 0-0 try 0/0 fixed
* other minor fix

---- 0.2.2 ----
* SaveSystem.save method can save directly a key inside an object example .save( "key.underkey", value )
* add isUnlock in SaveSystem
* add moveTo in GameObject and Camera
* Vector2.setPosition can handle z
* trigger trough parent gameObject in renderer when fade end
* can set camera background not stretched
* TextRenderer ca now use textStyle (italic, bold, etc...)

-- Fix
* camera limits not working as excepted with other qualities setting
* Time using lastCalcul and lastRender (2 value for one thing so remove lastRender)
* miss savedPlay in AudioManager
* can force Nebula load
* not using physicRatio in Camera.checkLimits
* fadeIn on gameObject turn it enable if it was not
* SpriteRenderer.changeSprite wasn't cleaning the sprite properly (with default or given values)

---- 0.2.1 fix ----
* fix Inputs.get wasn't relative to scaleDelta

---- 0.2.1 ---- Clean 0.2.0 version and add few features
* Fixed mouseEvents with 3D positions
* now CollisionSystem handle z position for objects (can ignore it with argument)
* you can convert 3D position to 2D position with argument to realize a test collision without taking care of z position
* fix on LangSystem.get (if no language available or no en as default)
* GameObject shake method
* GameObject focus method
* Camera fix focus offsets not added
* Inputs work now with multi inputs clone (using same key for different inputs)
* Renderer have now fade methods (fadeIn, fadeOut, fade, fadeTo same as Camera)
* GameObject can now call fade methods for all renderers and children's renderers (so you can fade objects directly)
* added parameters endFrame and startFrame in the imagesDatas config files (to allow directly to cut standard animation) you can still overwrite it when declaring the new SpriteRender or later in use
* added renderer attribute to GameObject which is equivalent to renderers[ 0 ] because in 90% of cases we use the first renderer only.
* added sleep attribute in Gui (the same as Scene)
* add security to prevent error on camera without scene
* add translations inside Inputs used to prevent leaving the current page

---- 0.2.0 ---- This update is not cleaned - some samples could not work
* Engine stop the loop if you change tab / reduce window / lock session, so when the user come back on the game, the engine don't count frame missed from long time ago (example if you leave the page for 5minutes, it deduce that you missed 21428.5 frames and will apply 21428 update on each scene enable)
* Fixed a bug with collider using an offset
* Fixed a bad calculation of the real position with BoxCollider (that us a decal to create a center like circles)
* add a middle ware in SpriteRenderer to change current sprite (changeSprite)
* CircleRenderer and BoxRenderer can now use lineWidth and canvasBuffer is set to good size
* AchievementsSystem you can now define achievements in a data file, it provide simples methods to unlock achievement, binded on Notifications handler. It's binded on Nebula to
* Nebula V1, if you want to make games for Dreamirl's plate-form.
* add option preventCenter on default renderer classes
* fix lookAt on childs
* improve on AudioManager, added fades synchronized on gameLoop and Time
* improve touch and mouse Events for "laggy" devices
* Camera change focus args, now use a params object, can apply offsets on focus target
* Camera shake is now sync on Time and on scaleDelta
* create fade, fadeOut, fadeIn and fadeTo on Camera
* GameObject rendering use now perfectly the z (if you use it) it calculate the 2D position with a 3D perspective, 3D perspective is not applied to children's due to performances optimizations
* Scene and GameObject add method provide now support with arguments or array, and created a addOne method to improve performances for single add
* adjust bigger offsets in GameObject to push more performances on Camera rendering
* loader display percent loaded and can customize text
* GameObject property cursorOnOver - if true will made cursor pointer auto
* Camera have now alpha and bufferAlpha
* Fix on AudioManager
* Added Plugins: Popups, MessageBoxes, Lightboxs, Button
* Now CSS is in one file for each group (engine, Nebula, plugins)
* in GameObject now you have to use setCollider to set a collider (no change if you instantiate/give collider when create the gameObject)
* Fix mistake in Vector2
* improve the biggerOffset calculation in GameObject
* added additionalModules in MainLoop (used to bind other stuff on the gameLoop without coding in gameLoop, used for plugin MessageBoxes)
* new Gui V1 ok (use it in the same way as a scene, with gameObjects and add method, but it's binded on a Camera)
* improved alpha calculation trough render -> camera -> gameObject renderer and childrens
* added system files for WP8 - WP8.1 - Tizen

---- 0.1.0 ----
Lot of refactoring about names to fit the most possible about what it's used for, fixes, and refactoring.
I think I forgot a lot of points here, but checkout the diff
* Documentation V1 (most important stuff is online documented)
* Vector2 fixes and improves
* GameObject.js refactoring and renaming, added globalEvents, fixes getPos
* Camera.js renaming, added globalEvents, isDown in events, and propagation
* CanvasBuffer.js returns added
* Colliders classes renaming
* Sizes.js add returns, center and uncenter if parent

---- 0.0.2 ----
* Add shake on camera -> use camera.shake( xRange, yRange, duration)
* Changed focus method on camera (now you give the target and it auto-focusing while you don't remove/change the target)
* correct bug on normalize in Vector2 (was using a >> 0 to produce int, but no int on normalize)
* improved deltaTime and missedFrame calcul - sometimes you got 0.2 delta and cause very sloooow motion (but with 30fps so wtf)

---- 0.0.1a ----
* Correct dictionnary to dictionary (you can say lol I assume!)
* Time.js - improve deltaTime calcul on Firefox + Safari + Opera (sometimes we got 0.06 with 0 missed frame, and it result on a very slow frame, now with 5 browser opens they go at the same "feel" speed)
* Scene.js - sortGameObjects on add an object only at the end of the current update (with a Bool flag) reduce call number (if lot of add in the same frame) and correct "object miss frames" bug
* Inputs.js - add escape key
* gamepad.js - clean code (format and indents)
* gamepad.js - add force value on axes events method
* gamepad.js - added [] fallbacks on Chrome gamepads (some version don't provide API and provide an error)
* AudioManager - commented methods on fxs
* AudioManager - add a get method on fxs and musics
* AudioManager - play an fx stop it if this one is playing
* Notifications - correct multi-Notifications that non disapear (id always 0)
* ImageManager - correct if totalFrame is under 1 set isAnimated to false as default (was 0)
* ImageManager - add the ignore load if you set load to false on an image